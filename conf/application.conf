include "common.conf"

# This is the main configuration file for the application.
# ~~~~~

appName=retrieve-citizen-income-stub

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"
play.modules.enabled += "modules.LocalGuiceModule"


# Global request handler
# ~~~~
# Set to the object handler for migrated 2.3 services
play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900


# The application languages
# ~~~~~
application.langs="en"


play.http.filters=filters.LocalFilters


# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router=prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  controllers.RetrieveCitizenIncomeController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=DEBUG

# Logger used by the framework:
logger.play=DEBUG

# Logger provided to your application:
logger.application=DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}



# Microservice specific config


mongodb {
  uri = "mongodb://localhost:27017/pertax-dependencies"
  channels = 5
  failoverStrategy = {
    initialDelayMsecs = 100
    retries = 10
    delay = {
      function = fibonacci
      factor = 1
    }
  }
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }
  services {
    auth {
      host = localhost
      port = 8500
    }
    datastream {
      host=localhost
      port=8100
    }
  }
}
